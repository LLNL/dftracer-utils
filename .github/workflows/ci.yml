name: CI

on:
  push:
    branches: [ main, develop, initialize, 'feat/**', 'fix/**' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    env:
      CMAKE_POLICY_VERSION_MINIMUM: 3.5

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04, ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake lcov zlib1g-dev libsqlite3-dev pkg-config ninja-build
    
    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        for f in cmake lcov zlib sqlite pkg-config ninja; do
          if brew list --versions "$f" >/dev/null; then
            echo "$f already installed"
          else
            brew install "$f"
          fi
        done

    - name: Run coverage
      if: matrix.os == 'ubuntu-22.04'
      run: |
        make coverage

    - name: Run test (Unix)
      if: matrix.os != 'ubuntu-22.04'
      run: |
        make test
    
    - name: Run Python tests (with venv)
      run: |
        make test-py
    
    - name: Run Python tests (without venv)
      run: |
        pip install --upgrade pip setuptools wheel
        pip install -e ".[dev]"
        pytest tests/python -v
    
    - name: Upload coverage reports to Codecov (Unix)
      if: matrix.os == 'ubuntu-22.04'
      uses: codecov/codecov-action@v4
      with:
        file: build-coverage/coverage/coverage_filtered.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
